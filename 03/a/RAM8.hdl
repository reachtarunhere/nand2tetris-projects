// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    Register(in=in, load=dmuxOut0, out=muxIn0);
    Register(in=in, load=dmuxOut1, out=muxIn1);
    Register(in=in, load=dmuxOut2, out=muxIn2);
    Register(in=in, load=dmuxOut3, out=muxIn3);
    Register(in=in, load=dmuxOut4, out=muxIn4);
    Register(in=in, load=dmuxOut5, out=muxIn5);
    Register(in=in, load=dmuxOut6, out=muxIn6);
    Register(in=in, load=dmuxOut7, out=muxIn7);
    DMux8Way(in=load, sel=address, a=dmuxOut0, b=dmuxOut1, c=dmuxOut2,
    d=dmuxOut3, e=dmuxOut4, f=dmuxOut5, g=dmuxOut6, h=dmuxOut7);
    Mux8Way16(sel=address, a=muxIn0, b=muxIn1, c=muxIn2,
    d=muxIn3, e=muxIn4, f=muxIn5, g=muxIn6, h=muxIn7, out=out);
}