// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    RAM512(in=in, load=dmuxOut0, address=address[0..8], out=muxIn0);
    RAM512(in=in, load=dmuxOut1, address=address[0..8], out=muxIn1);
    RAM512(in=in, load=dmuxOut2, address=address[0..8], out=muxIn2);
    RAM512(in=in, load=dmuxOut3, address=address[0..8], out=muxIn3);
    RAM512(in=in, load=dmuxOut4, address=address[0..8], out=muxIn4);
    RAM512(in=in, load=dmuxOut5, address=address[0..8], out=muxIn5);
    RAM512(in=in, load=dmuxOut6, address=address[0..8], out=muxIn6);
    RAM512(in=in, load=dmuxOut7, address=address[0..8], out=muxIn7);
    DMux8Way(in=load, sel=address[9..11], a=dmuxOut0, b=dmuxOut1, c=dmuxOut2,
    d=dmuxOut3, e=dmuxOut4, f=dmuxOut5, g=dmuxOut6, h=dmuxOut7);
    Mux8Way16(sel=address[9..11], a=muxIn0, b=muxIn1, c=muxIn2,
    d=muxIn3, e=muxIn4, f=muxIn5, g=muxIn6, h=muxIn7, out=out);
    
}